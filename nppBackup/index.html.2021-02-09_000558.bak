<html>
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no"> 
		<meta name="theme-color" content="#000000">
		<meta name="description" content="スクスタの毎日劇場風の画像を作ってシェアできるサイトのリメイクです。">
		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:site" content="@wingyin_tang">
		<meta name="twitter:image" content="https://lldetail.ml/LLAS/mainichi/twitter.png">
		<meta property="og:url" content="https://lldetail.ml/LLAS/mainichi/">
		<meta property="og:title" content="Re:毎日劇場メーカー">
		<meta property="og:description" content="スクスタの毎日劇場風の画像を作ってシェアできるサイトのリメイクです。">
		<meta property="og:image" content="https://lldetail.ml/LLAS/mainichi/twitter.png">
		
		<title>Re:毎日劇場メーカー</title>
		<script src="huffman.js"></script>
		<link rel="stylesheet" type="text/css" href="../llas-font.css?punct">
		<style>
			* {
				  -webkit-box-sizing: border-box;
					 -moz-box-sizing: border-box;
						  box-sizing: border-box;
			}
			canvas, #preview {
				width: 100%;
				border: 1px solid black;
				margin-bottom: 20px;
			}
			body {
				text-align: center;
			}
			a {
				color: black;
			}
			div.drawer {
				display: inline-block;
				width: calc(100% - 200px);
				overflow-x: scroll;
				border: 1px solid black;
				white-space: nowrap;
				vertical-align: middle;
			}
			#editor {
				left: 0px;
				width: 100vw;
				background:#FFF6DF;
				word-wrap: break-word;
			}
			.separator {
				text-align: left;
			}
			.dialog {
				width: 100%;
				background: white;
				border-radius: .3rem;
				padding: 32px;
				position: relative;
				margin: 10px 0;
				text-align: left;
			}
			.dialog input {
				width: 100%;
			}
			input, button, select {
				font-size: 18px;
			}
			input, button, select, #yohanelang {
				font-family: llas, llasth, llaskr, llastw;
			}
			body.zh #editor input, body.zh #editor select, body.zh #yohanelang {
				font-family: llastw, llas, llasth, llaskr;
			}
			input[type=text], select {
				border: 0px;
				border-bottom: 1px solid black;
				background: #00000000;
				height: 40px;
			}
			input {
				margin-left: 5px;
				padding-left: 5px;
			}
			select {
				padding: 5px 0;
				width: 120px;
			}
			button {
				color: white;
				background-color: #E93398;
			}
			button:disabled {
				color: white;
				background-color: #404040;
			}
			.share button {
				background: Transparent no-repeat;
				border: none;
				outline: none;
				cursor:pointer;
				width: 32px;
				height: 32px;
				padding: 0;
				vertical-align: middle;
				overflow: hidden;
			}
			input:placeholder-shown {
				border-bottom: 1px solid red;
			}
			input::placeholder {
				color: red;
			}
			#btn_quote {
				position: absolute;
				padding: 1px;
			}
			.btn_top, .btn_btm, .btn_add, .btn_close, .btn_swap {
				width: 41px;
				height: 41px;
				color: #019FE8;
				text-align: center;
			}
			.btn_top, .btn_btm, .btn_close, .btn_swap {
				background-color: #00000000;
				border: 0px;
			}
			.btn_swap {
				position: absolute;
				left: calc(50% - 41px / 2);
				border: 0px;
			}
			.separator:first-child .btn_swap, .separator:last-child .btn_swap {
				color: gray;
			}
			.btn_add {
				border: 1px solid #019FE8;
				border-radius: 50%;
				background-color: white;
				float: right;
			}
			.btn_close {
				color: #808080;
				position: absolute;
				left: 0;
				top: 0;
			}
			.counter {
				border-radius: .3rem;
				font-size: 12px;
				color: white;
				position: absolute;
				background: #E93398;
				padding: 0px 10px;
				right: 10;
				top: 10;
			}
			.thumb {
				width: 64px;
				height: 64px;
				vertical-align: middle;
			}
			.thumbs {
				width: 32px;
				height: 32px;
				vertical-align: middle;
			}
			.inline {
				width: 20px;
				height: 20px;
				vertical-align: middle;
			}
			body {
				margin: 0 calc((100vw - 640px)/2);
			}
			#editor {
				margin: 0 calc((640px - 100vw)/2);
				padding: 24 calc((100vw - 640px)/2);
			}
			#footer {
				margin: 0 calc((640px - 100vw)/2);
			}
			.break500 {
				display: none;
			}
			@media only screen and (max-width: 640px) {
				body {
					margin: 0 0;
				}
				#editor {
					margin: 0 0;
					padding: 0 0;
				}
				#footer {
					margin: 0 0;
				}
			}
			@media only screen and (max-width: 500px) {
				.break500 {
					display: block;
				}
				#btn_quote {
					right: 1px;
				}
			}
			@media (prefers-color-scheme: dark) { 
				body {
					background: #000000C0;
					color: #808080;
				}
				a {
					color: #808080;
				}
				input {
					color: #808080;
					border-bottom: 1px solid #808080;
				}
				#editor {
					background: #3D2A0080;
				}
				.btn_add {
					background-color: black;
				}
				.dialog {
					background: #808080;
				}
				.btn_close {
					color: black;
				}
				.dialog input {
					color: black;
					border-bottom: 1px solid black;
				}
				input:placeholder-shown {
					border-bottom: 1px solid #c00000;
				}
				input::placeholder {
					color: #c00000;
				}
			}
			@supports not (background-color: #00000000) {
				.btn_top, .btn_btm, .btn_swap {
					background:#FFF6DF;
				}
				.btn_close {
					background-color: white;
				}
			}
		</style>
	</head>
	<body>
		<div style="font-size: 32px; text-align: center">Re:<span style="color:#E93398">毎</span>日<span style="color:#019FE8">劇</span>場<span style="color:#FFC94A">メ</span>ーカー</div><br>
		<input type="text" id="header" placeholder="ヘッダ (Header)" maxlength="20" value="毎日劇場"><br><br>
		<input type="text" id="title" placeholder="タイトル (Title)" maxlength="20"><button id="btn_quote" onclick="addquotes()">『』</button><br><br>
		言語 (Language): <br class="break500"><input type="radio" onclick="changelang('jp')" name="lang" checked>日本語 <input type="radio" onclick="changelang('en')" name="lang">English <input type="radio" onclick="changelang('zh')" name="lang"><span style="font-family: llastw">中文</span> <input type="radio" onclick="changelang('kr')" name="lang">한국어 <input type="radio" onclick="changelang('th')" name="lang">ไทย <br>
		名前置換 (Name Replace): <br class="break500"><input type="checkbox" onclick="toggleyo(this.checked)"><img src="../img/icon/yoshiko.png" class="inline"><span id="yohanelang">ヨハネ</span> <span id="lang_zh" style="display:none"><span class="experimental" style="display: none"><input type="checkbox" onclick="togglesimp(this.checked)" name="lang"><span style="font-family: llastw">简化字（缺字）</span> </span><input type="checkbox" onclick="togglezh(this.checked)"><span style="font-family: llastw"><img src="../img/icon/kotori.png" class="inline"><img src="../img/icon/nico.png" class="inline">其他譯名</span> </span><br>
		<button onclick="if (confirm('リセットしてもよろしいですか？\nAre you sure to reset?')) {JSONimport(defaultd)}">リセット (Reset)</button> <button onclick="exports()">書き出し (Export)</button> <button onclick="ifanyorreturn(prompt('下のテキストボックスに内容を貼り付けてください。\nPlease paste the contents to the textbox below.',''),JSONimport)">読み込み (Import)</button> <button onclick="extensionimport()">拡張パック (Extensions)</button> <button class="experimental" onclick="loadtheater()" style="display: none">公式劇場 (In-game Theater)</button><div class="experimental" style="display: none"><br><div class="share">シェア (Share): <br class="break500">
		<button onclick="shareon()"><div style="transform: scale(1.25);">🔗</div></button>
		
		<button onclick="shareon('email')"><div style="transform: scale(1.25);">📧</div></button>
		
		<button onclick="shareon('pinterest')"><svg viewBox="0 0 30 30"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g transform="translate(-250.000000, -20.000000)"> <g transform="translate(250.000000, 20.000000)"> <path d="M29.4489643,14.6615957 C29.4489643,22.7220213 22.8679286,29.2562766 14.7499286,29.2562766 C6.63192857,29.2562766 0.051,22.7220213 0.051,14.6615957 C0.051,6.60106383 6.63192857,0.0668085106 14.7499286,0.0668085106 C22.8679286,0.0668085106 29.4489643,6.60106383 29.4489643,14.6615957" fill="#FFFFFF"></path> <path d="M14.7328929,1.68606383 C7.51553571,1.68606383 1.66467857,7.49542553 1.66467857,14.6615957 C1.66467857,20.1585106 5.10910714,24.853617 9.97039286,26.7442553 C9.85617857,25.7176596 9.753,24.1429787 10.0158214,23.0220213 C10.2531429,22.0095745 11.5481786,16.5723404 11.5481786,16.5723404 C11.5481786,16.5723404 11.1572143,15.7952128 11.1572143,14.6460638 C11.1572143,12.8419149 12.2105357,11.4948936 13.5218571,11.4948936 C14.6367857,11.4948936 15.1752857,12.3261702 15.1752857,13.3226596 C15.1752857,14.4359574 14.4615,16.1004255 14.0930357,17.642766 C13.7852143,18.9345745 14.7453214,19.9878723 16.0281429,19.9878723 C18.351,19.9878723 20.1363214,17.5558511 20.1363214,14.0458511 C20.1363214,10.9391489 17.8881429,8.76691489 14.6776071,8.76691489 C10.9593214,8.76691489 8.77682143,11.5361702 8.77682143,14.3978723 C8.77682143,15.5130851 9.20957143,16.7089362 9.74935714,17.3590426 C9.85607143,17.4875532 9.87171429,17.6001064 9.83989286,17.7310638 C9.74078571,18.1411702 9.52028571,19.0225532 9.47710714,19.202766 C9.42010714,19.4403191 9.28757143,19.4906383 9.04007143,19.3762766 C7.40775,18.6218085 6.38742857,16.2524468 6.38742857,14.3494681 C6.38742857,10.256383 9.38260714,6.49744681 15.0219643,6.49744681 C19.5551786,6.49744681 23.07825,9.70478723 23.07825,13.991383 C23.07825,18.4634043 20.2385357,22.062234 16.2971786,22.062234 C14.9727857,22.062234 13.728,21.3791489 13.3018929,20.572234 C13.3018929,20.572234 12.6466071,23.0497872 12.4878214,23.6567021 C12.1926429,24.7837234 11.39625,26.1964894 10.8634286,27.0582979 C12.08625,27.4342553 13.3856786,27.6370213 14.7328929,27.6370213 C21.95025,27.6370213 27.8011071,21.827766 27.8011071,14.6615957 C27.8011071,7.49542553 21.95025,1.68606383 14.7328929,1.68606383" fill="#e60023"></path></g></g></g></svg></button>
		
		<button onclick="shareon('whatsapp')"><svg viewBox="0 0 39 39"><path style="fill:#00E676;" d="M10.7,32.8l0.6,0.3c2.5,1.5,5.3,2.2,8.1,2.2l0,0c8.8,0,16-7.2,16-16c0-4.2-1.7-8.3-4.7-11.3 c-3-3-7-4.7-11.3-4.7c-8.8,0-16,7.2-15.9,16.1c0,3,0.9,5.9,2.4,8.4l0.4,0.6l-1.6,5.9L10.7,32.8z"/><path style="fill:#FFFFFF;" d="M32.4,6.4C29,2.9,24.3,1,19.5,1C9.3,1,1.1,9.3,1.2,19.4c0,3.2,0.9,6.3,2.4,9.1L1,38l9.7-2.5 c2.7,1.5,5.7,2.2,8.7,2.2l0,0c10.1,0,18.3-8.3,18.3-18.4C37.7,14.4,35.8,9.8,32.4,6.4z M19.5,34.6L19.5,34.6c-2.7,0-5.4-0.7-7.7-2.1 l-0.6-0.3l-5.8,1.5L6.9,28l-0.4-0.6c-4.4-7.1-2.3-16.5,4.9-20.9s16.5-2.3,20.9,4.9s2.3,16.5-4.9,20.9C25.1,33.8,22.3,34.6,19.5,34.6 z M28.3,23.5L27.2,23c0,0-1.6-0.7-2.6-1.2c-0.1,0-0.2-0.1-0.3-0.1c-0.3,0-0.5,0.1-0.7,0.2l0,0c0,0-0.1,0.1-1.5,1.7 c-0.1,0.2-0.3,0.3-0.5,0.3h-0.1c-0.1,0-0.3-0.1-0.4-0.2l-0.5-0.2l0,0c-1.1-0.5-2.1-1.1-2.9-1.9c-0.2-0.2-0.5-0.4-0.7-0.6 c-0.7-0.7-1.4-1.5-1.9-2.4l-0.1-0.2c-0.1-0.1-0.1-0.2-0.2-0.4c0-0.2,0-0.4,0.1-0.5c0,0,0.4-0.5,0.7-0.8c0.2-0.2,0.3-0.5,0.5-0.7 c0.2-0.3,0.3-0.7,0.2-1c-0.1-0.5-1.3-3.2-1.6-3.8c-0.2-0.3-0.4-0.4-0.7-0.5h-0.3c-0.2,0-0.5,0-0.8,0c-0.2,0-0.4,0.1-0.6,0.1 l-0.1,0.1c-0.2,0.1-0.4,0.3-0.6,0.4c-0.2,0.2-0.3,0.4-0.5,0.6c-0.7,0.9-1.1,2-1.1,3.1l0,0c0,0.8,0.2,1.6,0.5,2.3l0.1,0.3 c0.9,1.9,2.1,3.6,3.7,5.1l0.4,0.4c0.3,0.3,0.6,0.5,0.8,0.8c2.1,1.8,4.5,3.1,7.2,3.8c0.3,0.1,0.7,0.1,1,0.2l0,0c0.3,0,0.7,0,1,0 c0.5,0,1.1-0.2,1.5-0.4c0.3-0.2,0.5-0.2,0.7-0.4l0.2-0.2c0.2-0.2,0.4-0.3,0.6-0.5c0.2-0.2,0.4-0.4,0.5-0.6c0.2-0.4,0.3-0.9,0.4-1.4 c0-0.2,0-0.5,0-0.7C28.6,23.7,28.5,23.6,28.3,23.5z"/></svg></button>
		
		<button onclick="shareon('line')"><svg viewBox="0 0 300 300"><g transform="matrix(1.25,0,0,-1.25,-424.5206,605.65166)"><g transform="matrix(1.6639441,0,0,1.6639441,535.69699,483.72129)"><path style="fill:#00b900;" d="m 0,0 -91.246,0 c -14.327,0.019 -26.093,-11.583 -26.114,-25.914 l 0,-91.246 c -0.018,-14.332 11.585,-26.099 25.914,-26.118 l 91.247,0 c 14.33,-0.018 26.091,11.583 26.113,25.917 l 0,91.247 C 25.934,-11.782 14.333,-0.02 0,0" /></g><g transform="matrix(1.6639441,0,0,1.6639441,546.02809,375.00068)"><path style="fill:#ffffff;" d="m 0,0 c 0,23.342 -23.4,42.332 -52.165,42.332 -28.761,0 -52.164,-18.99 -52.164,-42.332 0,-20.926 18.558,-38.451 43.626,-41.765 1.699,-0.366 4.011,-1.12 4.596,-2.572 0.526,-1.319 0.344,-3.385 0.168,-4.717 0,0 -0.612,-3.681 -0.744,-4.465 -0.227,-1.319 -1.048,-5.158 4.518,-2.812 5.568,2.346 30.042,17.689 40.986,30.286 l -0.002,0 C -3.621,-17.755 0,-9.342 0,0" /></g><g transform="matrix(1.6639441,0,0,1.6639441,441.5933,393.76931)"><path style="fill:#00b900;" d="M 0,0 -3.659,0 C -4.22,0 -4.676,-0.455 -4.676,-1.014 l 0,-22.73 c 0,-0.56 0.456,-1.014 1.017,-1.014 l 3.659,0 c 0.561,0 1.016,0.454 1.016,1.014 l 0,22.73 C 1.016,-0.455 0.561,0 0,0" /></g><g transform="matrix(1.6639441,0,0,1.6639441,483.49956,393.76931)"><path style="fill:#00b900;" d="M 0,0 -3.659,0 C -4.22,0 -4.675,-0.455 -4.675,-1.014 l 0,-13.504 -10.416,14.067 c -0.024,0.036 -0.051,0.07 -0.079,0.103 l -0.007,0.006 c -0.02,0.023 -0.04,0.043 -0.061,0.063 -0.006,0.006 -0.012,0.011 -0.019,0.017 -0.017,0.016 -0.035,0.031 -0.054,0.045 -0.008,0.008 -0.017,0.014 -0.026,0.021 -0.018,0.012 -0.035,0.025 -0.053,0.036 -0.01,0.007 -0.02,0.013 -0.031,0.018 -0.018,0.011 -0.036,0.022 -0.054,0.031 -0.011,0.005 -0.021,0.011 -0.032,0.015 -0.019,0.009 -0.038,0.018 -0.058,0.025 -0.012,0.004 -0.022,0.008 -0.033,0.012 -0.02,0.007 -0.04,0.014 -0.061,0.019 -0.011,0.004 -0.023,0.006 -0.035,0.01 -0.02,0.004 -0.039,0.009 -0.058,0.013 -0.014,0.002 -0.029,0.004 -0.043,0.005 -0.018,0.004 -0.036,0.005 -0.054,0.007 -0.017,0.002 -0.034,0.002 -0.052,0.003 -0.013,0 -0.023,0.002 -0.036,0.002 l -3.658,0 c -0.561,0 -1.017,-0.455 -1.017,-1.014 l 0,-22.73 c 0,-0.56 0.456,-1.014 1.017,-1.014 l 3.658,0 c 0.562,0 1.017,0.454 1.017,1.014 l 0,13.5 10.429,-14.085 c 0.072,-0.102 0.161,-0.185 0.258,-0.251 0.003,-0.002 0.007,-0.005 0.01,-0.008 0.021,-0.013 0.042,-0.026 0.063,-0.038 0.01,-0.006 0.019,-0.01 0.029,-0.015 0.015,-0.009 0.032,-0.017 0.048,-0.024 0.017,-0.007 0.032,-0.014 0.05,-0.021 0.01,-0.004 0.02,-0.008 0.03,-0.011 0.024,-0.009 0.046,-0.016 0.069,-0.023 0.005,0 0.01,-0.002 0.015,-0.003 0.083,-0.022 0.17,-0.035 0.26,-0.035 l 3.659,0 c 0.562,0 1.016,0.454 1.016,1.014 l 0,22.73 C 1.016,-0.455 0.562,0 0,0" /></g><g transform="matrix(1.6639441,0,0,1.6639441,426.91715,362.04388)"><path style="fill:#00b900;" d="m 0,0 -9.942,0 0,18.051 c 0,0.561 -0.455,1.016 -1.015,1.016 l -3.66,0 c -0.561,0 -1.016,-0.455 -1.016,-1.016 l 0,-22.726 0,-0.002 c 0,-0.273 0.109,-0.52 0.284,-0.702 0.004,-0.005 0.008,-0.01 0.014,-0.015 0.005,-0.005 0.01,-0.009 0.015,-0.014 0.183,-0.176 0.429,-0.284 0.702,-0.284 l 10e-4,0 14.617,0 c 0.561,0 1.014,0.456 1.014,1.017 l 0,3.659 C 1.014,-0.455 0.561,0 0,0" /></g><g transform="matrix(1.6639441,0,0,1.6639441,517.12172,384.29914)"><path style="fill:#00b900;" d="m 0,0 c 0.561,0 1.014,0.454 1.014,1.016 l 0,3.659 C 1.014,5.236 0.561,5.692 0,5.692 l -14.617,0 -0.002,0 c -0.274,0 -0.521,-0.11 -0.704,-0.287 -0.004,-0.004 -0.009,-0.007 -0.012,-0.011 -0.006,-0.006 -0.011,-0.012 -0.016,-0.018 -0.174,-0.182 -0.282,-0.428 -0.282,-0.7 l 0,-0.001 0,-22.726 0,-0.001 c 0,-0.273 0.109,-0.52 0.284,-0.702 0.004,-0.005 0.009,-0.011 0.014,-0.015 0.004,-0.005 0.01,-0.01 0.015,-0.014 0.182,-0.175 0.429,-0.284 0.701,-0.284 l 0.002,0 14.617,0 c 0.561,0 1.014,0.456 1.014,1.016 l 0,3.66 c 0,0.56 -0.453,1.016 -1.014,1.016 l -9.941,0 0,3.842 9.941,0 c 0.561,0 1.014,0.455 1.014,1.016 l 0,3.659 c 0,0.561 -0.453,1.017 -1.014,1.017 l -9.941,0 0,3.841 L 0,0 Z" /></g></g></svg></button>
		
		<button onclick="shareon('telegram')"><svg viewBox="0 0 34 34" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><circle cx="17" cy="17" fill="#27a7e5" r="17"/><path d="m7.06510669 16.9258959c5.22739451-2.1065178 8.71314291-3.4952633 10.45724521-4.1662364 4.9797665-1.9157646 6.0145193-2.2485535 6.6889567-2.2595423.1483363-.0024169.480005.0315855.6948461.192827.1814076.1361492.23132.3200675.2552048.4491519.0238847.1290844.0536269.4231419.0299841.65291-.2698553 2.6225356-1.4375148 8.986738-2.0315537 11.9240228-.2513602 1.2428753-.7499132 1.5088847-1.2290685 1.5496672-1.0413153.0886298-1.8284257-.4857912-2.8369905-1.0972863-1.5782048-.9568691-2.5327083-1.3984317-4.0646293-2.3321592-1.7703998-1.0790837-.212559-1.583655.7963867-2.5529189.2640459-.2536609 4.7753906-4.3097041 4.755976-4.431706-.0070494-.0442984-.1409018-.481649-.2457499-.5678447-.104848-.0861957-.2595946-.0567202-.3712641-.033278-.1582881.0332286-2.6794907 1.5745492-7.5636077 4.6239616-.715635.4545193-1.3638349.6759763-1.9445998.6643712-.64024672-.0127938-1.87182452-.334829-2.78737602-.6100966-1.12296117-.3376271-1.53748501-.4966332-1.45976769-1.0700283.04048-.2986597.32581586-.610598.8560076-.935815z" fill="#fff"/></g></svg></button>
		
		<button onclick="shareon('skype')"><svg viewBox="0 0 256 256"><path fill="#fffffe" d=" M 0.00 0.00 L 256.00 0.00 L 256.00 256.00 L 0.00 256.00 L 0.00 0.00 Z" style="fill:none" /><path fill="#00aff0" d=" M 38.00 21.99 C 58.33 7.32 87.08 6.06 108.73 18.61 C 133.14 14.38 158.95 18.40 180.73 30.27 C 205.04 43.33 224.13 65.76 233.02 91.90 C 239.13 109.59 240.55 128.82 237.37 147.25 C 245.19 161.00 247.90 177.55 244.73 193.06 C 241.38 210.17 230.83 225.68 216.24 235.21 C 196.04 248.79 168.29 249.56 147.25 237.38 C 123.82 241.41 99.11 237.92 77.91 227.10 C 53.27 214.72 33.62 192.82 24.01 166.97 C 17.05 148.50 15.30 128.18 18.61 108.74 C 10.62 94.75 8.03 77.84 11.44 62.10 C 14.82 46.02 24.55 31.41 38.00 21.99 Z" /><path fill="#fffffe" d=" M 49.00 34.98 C 61.35 26.69 77.55 24.62 91.62 29.41 C 96.62 31.00 101.12 33.75 105.64 36.34 C 123.28 32.49 142.00 33.05 159.07 39.16 C 186.24 48.55 208.42 71.08 217.34 98.41 C 223.00 115.07 223.38 133.21 219.65 150.34 C 224.05 157.55 227.84 165.35 228.73 173.85 C 230.91 189.86 224.39 206.64 212.12 217.12 C 200.14 227.68 182.84 231.70 167.42 227.49 C 161.27 226.00 155.76 222.81 150.34 219.66 C 131.76 223.73 111.98 222.83 94.21 215.84 C 67.98 205.85 46.85 183.53 38.38 156.77 C 32.95 140.32 32.68 122.50 36.35 105.64 C 30.68 96.80 26.67 86.62 26.87 75.97 C 26.72 59.73 35.40 43.82 49.00 34.98 Z" style="fill:#ffffff;fill-opacity:1" /><path fill="#00aff0" d=" M 113.41 60.77 C 129.40 58.35 146.25 60.80 160.52 68.54 C 166.76 72.00 172.80 76.68 175.70 83.40 C 177.59 87.82 177.80 93.59 174.31 97.29 C 170.53 101.16 164.36 102.35 159.29 100.72 C 153.42 98.26 150.50 92.11 145.52 88.45 C 139.26 83.29 130.83 81.90 122.94 82.04 C 117.17 82.29 110.99 83.60 106.78 87.84 C 102.89 91.99 101.45 99.10 105.24 103.77 C 108.82 107.90 114.35 109.44 119.42 110.85 C 129.09 113.27 138.87 115.22 148.58 117.51 C 158.68 119.82 168.88 124.24 175.55 132.47 C 187.05 147.37 184.46 171.00 170.16 183.20 C 158.72 193.33 142.81 196.13 127.99 196.22 C 112.17 195.99 95.26 192.75 83.10 181.93 C 77.00 176.43 71.87 168.13 73.71 159.64 C 75.72 151.20 87.31 148.00 93.88 153.19 C 98.90 157.22 101.62 163.35 106.46 167.56 C 112.25 172.87 120.32 174.98 128.04 174.79 C 135.61 174.99 143.65 172.67 148.84 166.91 C 152.37 163.02 154.24 157.10 151.95 152.12 C 150.07 147.44 145.24 144.89 140.62 143.63 C 132.10 141.40 123.52 139.37 115.00 137.12 C 105.64 134.83 95.91 132.74 87.86 127.16 C 81.58 122.99 76.82 116.48 75.29 109.06 C 72.72 97.42 74.56 83.99 83.02 75.10 C 90.76 66.49 102.24 62.49 113.41 60.77 Z"/></svg></button>
		
		<button onclick="shareon('twitter')"><svg viewBox="0 0 24 24"><g><path d="M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z" fill="#1da1f2"></path></g></svg></button>
		
		<button onclick="shareon('facebook')"><svg viewBox="0 0 300 300"><g transform="translate(-33.466291,-429.48076)"><g transform="matrix(1.1165523,0,0,-1.1165523,-103.48743,863.08638)"><g><g transform="translate(375.7163,120.5527)"><path d="m 0,0 c 8.134,0 14.73,6.596 14.73,14.73 l 0,237.434 c 0,8.137 -6.596,14.731 -14.73,14.731 l -237.433,0 c -8.137,0 -14.73,-6.594 -14.73,-14.731 l 0,-237.434 c 0,-8.134 6.593,-14.73 14.73,-14.73 L 0,0 Z" style="fill:#3b5998;" /></g><g transform="translate(307.7046,120.5527)"><path d="m 0,0 0,103.355 34.693,0 5.194,40.28 -39.887,0 0,25.717 c 0,11.662 3.238,19.609 19.962,19.609 l 21.33,0.01 0,36.026 c -3.69,0.49 -16.351,1.587 -31.081,1.587 -30.753,0 -51.806,-18.771 -51.806,-53.244 l 0,-29.705 -34.781,0 0,-40.28 34.781,0 L -41.595,0 0,0 Z" style="fill:#ffffff;"/></g></g></g></g></svg></button></div>
		
		</div><br><span style="font-size:8px">クライアント側のみでイメージを生成するから、サーバーに保存できません。<br>Images are generated on the client side, <span onclick="unlockexperimental()">s</span>o they cannot be saved on the server.</span><br><br>
		<div id="editor"></div><br>
		<canvas width="2146" height="0" style="display:none;"></canvas><br>
		<button onclick="predraw()">プリビュー (Preview)</button> <button id="savebtn" onclick="saveimg()">保存 (Save)</button> <button onclick="newtab()">新しいタブ (New Tab)</button>
		<img id="preview" class="experimental2" width="2146" src="" style="display: none"><br><br><br>
		<div id="footer" style="text-align:right;">Created by TWY (<a href="/Lovelive/">lldetail</a>)<br><span style="font-size:8px"><a href="https://twitter.com/devsifmatch" target="_blank">浦の星パソコン部</a>の作品を參考にしました。</span></div>
		<script>
			function ifanyorreturn(x, callback) {
				if (!x) return;
				callback(x);
			}
			function id(d){
				return document.getElementById(d);
			};
			var exp = false;
			var header = "毎日劇場";
			var title = "";
			var defaultd = [{"n":0,"d":"ファイトだよ！"}];
			var actuald = JSON.parse(JSON.stringify(defaultd));
			var lang = "jp";
			var llname = {
			"jp": ["穂乃果","絵里","ことり","海未","凛","真姫","希","花陽","にこ","千歌","梨子","果南","ダイヤ","曜","善子","花丸","鞠莉","ルビィ","歩夢","かすみ","しずく","果林","愛","彼方","せつ菜","エマ","璃奈","栞子"],
			"en": ["Honoka", "Eli", "Kotori", "Umi", "Rin", "Maki", "Nozomi", "Hanayo", "Nico", "Chika", "Riko", "Kanan", "Dia", "You", "Yoshiko", "Hanamaru", "Mari", "Ruby", "Ayumu", "Kasumi", "Shizuku", "Karin", "Ai", "Kanata", "Setsuna", "Emma", "Rina", "Shioriko"],
			"zh_t": ["穗乃果","繪里","琴梨","海未","凜","真姬","希","花陽","日香","千歌","梨子","果南","黛雅","曜","善子","花丸","鞠莉","露比","步夢","霞","雫","果林","愛","彼方","雪菜","艾瑪","璃奈","栞子"],
			"zh_s": ["穗乃果","绘里","琴梨","海未","凛","真姬","希","花阳","日香","千歌","梨子","果南","黛雅","曜","善子","花丸","鞠莉","露比","步梦","霞","雫","果林","爱","彼方","雪菜","艾玛","璃奈","栞子"],
			"kr": ["호노카","에리","코토리","우미","린","마키","노조미","하나요","니코","치카","리코","카난","다이아","요우","요시코","하나마루","마리","루비","아유무","카스미","시즈쿠","카린","아이","카나타","세츠나","엠마","리나","시오리코"],
			"th": ["โฮโนกะ","เอริ","โคโทริ","อุมิ","ริน","มากิ","โนโซมิ","ฮานาโยะ","นิโกะ","จิกะ","ริโกะ","คานัน","ไดยะ","โย","โยชิโกะ","ฮานะมารุ","มาริ","รูบี้","อายูมุ","คาสึมิ","ชิสึคุ","คาริน","ไอ","คานาตะ","เซ็ตสึนะ","เอ็มม่า","รินะ","ชิโอริโกะ"]
			};
			var extensions_default = {"custom":[]};
			var extensions = JSON.parse(JSON.stringify(extensions_default));
			var llshort = ["honoka","eli","kotori","umi","rin","maki","nozomi","hanayo","nico","chika","riko","kanan","dia","you","yoshiko","hanamaru","mari","ruby","ayumu","kasumi","shizuku","karin","ai","kanata","setsuna","emma","rina","shioriko"];
			var loaded = "".padStart(llname["jp"].length," ").split("").map(a=>false);
			var usage = "".padStart(llname["jp"].length," ").split("").map(a=>0);
				usage["???"] = 0;
				usage["___"] = 0;
			var savebtn = document.getElementById("savebtn");
			var loading = 0;
			var zh_simp = false;
			var zh_nick = false;
			var yohane = false;
			var base = new Image;
			base.onload = function(){
				baseloaded = true;
			};
			base.src = "base.png";
			var bgimg = new Image;
			bgimg.onload = function(){
				bgimgloaded = true;
			};
			bgimg.src = "mainichi.png";
			var separator = new Image;
			separator.onload = function(){
				separatorloaded = true;
			};
			separator.src = "mainichi_separator.png";
			img = [];
			/*var iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);
			if (iOS) document.documentElement.setAttribute("class", "iOS");*/
			var bgimgloaded = false;
			var separatorloaded = false;
			canv = document.getElementsByTagName("canvas")[0];
			canvas = canv.getContext('2d');
			let fontloaded = !document.fonts;
			if (document.fonts) {
				document.fonts.ready.then(function() {
					fontloaded = true;
				});
			} else {
				window.onload = function() {
					fontloaded = true;
				};
			};
			function predraw(callback){
				header = id("header").value?(lang=="zh"?id("header").value.replace(/毎日/g,"每日"):id("header").value):(ischi()?"每日劇場":"毎日劇場");
				title = id("title").value?id("title").value:{"jp":"無題","en":"Untitled","zh":"未命名","th":"ไม่มีชื่อ","kr":"제목 없음"}[lang];
				if (baseloaded && bgimgloaded && separatorloaded && fontloaded){
					//check images to be loaded
					let hastoload = false;
					for (let i = 0; i < actuald.length; ++i) {
						let n = actuald[i].n;
						let tn;
						if (n == "???") continue;
						if (n == "___") continue;
						if (isNaN(n)){
							tn = n.split("_");
						}
						if (!loaded[n]) {
							hastoload = true;
							loaded[n] = true;
							img[n] = new Image;
							img[n].tag = n;
							img[n].callback = callback;
							img[n].onload = function(){
								loading--;
								if (!loading) draw(this.callback);
							};
							img[n].onerror = function(){
								loading--;
								alert("Failed Loading " + getName(this.tag) + "'s Icon.");
								loaded[this.tag] = false;
							};
							img[n].src = getSrc(n);
							++loading;
						};
					}		
					if (!hastoload) draw(callback);
				} else {
					let notloaded = [];
					if (!baseloaded) {
						notloaded.push("Base Icon");
					}
					if (!bgimgloaded) {
						notloaded.push("Background Image");
					}
					if (!separatorloaded) {
						notloaded.push("Separator Line");
					}
					if (!fontloaded) {
						notloaded.push("Font");
					}
					alert("Something is not loaded: \n\n" + notloaded.join("\n"));
				};
			};
			function nextbreakpt(s, curr){
				let unbreakable = function(c) {
					return /[\0-\u2e7f]/.test(c) && !/[\u0e00-\u0e7f]/.test(c) && !/[\u0e80-\u0eff]/.test(c) && !/[\u1000-\u109f]/.test(c) && !/[\u1b00-\u1b7f]/.test(c) && !/[\u1bc0-\u1bff]/.test(c) && !/[\u1780-\u17ff]/.test(c) && !/[\u2460-\u24ff]/.test(c) && !/[\u2026]/.test(c); //non Chinese / Japanese Character that is not Thai, Lao, Myanmar, Balinese, Batak, Khmer or circled text or …
				};
				let temp = curr + 1;
				while (temp < s.length && (" ་࠰".indexOf(s[temp - 1]) == -1) && unbreakable(s[temp-1]) && unbreakable(s[temp])) { //can break between two Chinese / Japanese / Thai / space
					++temp;
				}
				return temp - curr;
			}
			function isRTL(s){
				return /^[^A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02B8\u0300-\u0590\u0800-\u1FFF'+'\u2C00-\uFB1C\uFDFE-\uFE6F\uFEFD-\uFFFF]*[\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC]/.test(s);
			};
			function addquotes(){
				let t = id("title").value;
				if (t[0] == "『" && t.substr(-1) == "』") {
					id("title").value = t.substr(1, t.length-2);
				} else {
					id("title").value = "『" + t + "』";
				};
			}
			function getName(v) {
				if (v == "???") {
					return "？？？";
				} else if (v == "___") {
					return "";
				} else if (isNaN(v)) { //from extensions
					let temp = v.split("_");
					switch (typeof extensions[temp[0]][temp[1]].s) {
						case "object":
							if (lang === "zh") {
								if (extensions[temp[0]][temp[1]].s["zh_" + (zh_simp?"s":"t")]) return extensions[temp[0]][temp[1]].s["zh_" + (zh_simp?"s":"t")];
							}
							if (extensions[temp[0]][temp[1]].s[lang]) return extensions[temp[0]][temp[1]].s[lang];
							return extensions[temp[0]][temp[1]].s[Object.keys(extensions[temp[0]][temp[1]].s)[0]];
							break;
						case "string":
						default:
							//find locale variant
							return extensions[temp[0]][temp[1]].s;
					}
				} else {
					if (yohane && llname["jp"][v] == "善子") {
						return {"jp":"ヨハネ","en":"Yohane","zh":"夜羽","th":"โยฮาเนะ","kr":"요하네"}[lang];
					}
					if (lang === "zh") {
						let temp = llname["zh_" + (zh_simp?"s":"t")][v];
						if (zh_nick) {
							temp = temp.replace("琴梨",(zh_simp?"小鸟":"小鳥")).replace("日香","妮可");
						}
						return temp;
					}
					return llname[lang][v];
				}
			}
			function getSrc(v) {
				if (v == "???" || v == "___") {
					return "Pixel.png";
				} else if (isNaN(v)) {
					let temp = v.split("_");
					if (extensions[temp[0]][temp[1]].i){
						return "../img/icon/" + temp[0] + "/" + extensions[temp[0]][temp[1]].i + ".png";
					} else if (extensions[temp[0]][temp[1]].c != false){
						return generateBase(extensions[temp[0]][temp[1]].c, true);
					} else {
						return "Pixel.png";
					}
				} else {
					return "../img/icon/" + llshort[v] + ".png";
				}
			}
			function anyColor(v) {
				if (v != "???" && v != "___" && isNaN(v)) {
					let temp = v.split("_");
					return extensions[temp[0]][temp[1]].c!=undefined?true:false;
				} else {
					return false;
				}
			}
			function getColor(v) {
				if (v != "???" && v != "___" && isNaN(v)) {
					let temp = v.split("_");
					return extensions[temp[0]][temp[1]].c;
				} else {
					return false;
				}
			}
			function generateBase(c, url) {
				let cv = document.createElement("canvas");
				cv.width = 150;
				cv.height = 150;
				let canvas = cv.getContext("2d");
				canvas.clearRect(0, 0, cv.width, cv.height);
				canvas.drawImage(base,0,0,150,150,0,0,150,150);
				canvas.fillStyle = c;
				canvas.globalCompositeOperation = "lighter";
				canvas.fillRect(0,0,150,150); //icon
				canvas.globalCompositeOperation = "destination-in";
				canvas.drawImage(base,0,0,150,150,0,0,150,150);
				if (url) {
					return cv.toDataURL("image/png");
				} else {
					//let i = new Image;
					//i.src = cv.toDataURL("image/png");
					return cv;
				}
			}
			function draw(callback){
				let tempy = 300;
				let maxwidth = 1875;
				let fonts = lang=="zh"?"llastw, llas, llasth, llaskr":"llas, llasth, llaskr, llastw";
				canvas.font = '46.3px ' + fonts;
				for (let i = 0; i < actuald.length; ++i) {
					if (actuald[i].n == "???") {
						tempy -= 77;
					} else if (actuald[i].n == "___") {
						tempy -= 170;
					} else {
						if (anyColor(actuald[i].n)) {
							if (getColor(actuald[i].n) == false) {
								tempy -= 77;
							}
						}
					}
					let w = canvas.measureText(actuald[i].d).width;
					let st = 0;
					while (w > maxwidth) {
						let l = nextbreakpt(actuald[i].d, st);//Math.min(40, actuald[i].d.length - st);
						//let nx = nextbreakpt(actuald[i].d, st)
						while (st + l < actuald[i].d.length && canvas.measureText(actuald[i].d.substr(st, l + nextbreakpt(actuald[i].d, st + l)).replace(/\s+$/g,"")).width < maxwidth) {
							l += nextbreakpt(actuald[i].d, st + l); //++l;
						};
						tempy += 80;
						st += l;
						w = canvas.measureText(actuald[i].d.substr(st).replace(/\s+$/g,"")).width;
					};
					if (st < actuald[i].d.length){
						tempy += 80;
					}
					tempy += 195.5;
				}
				let h = tempy + 123;
				canv.setAttribute("height", h);
				canvas.clearRect(0, 0, 2146, h);
				//canvas.drawImage(bgimg,0,0,2146,1162,0,0,2146,1162); //top
				
				canvas.drawImage(bgimg,0,0,2146,260,0,0,2146,260); //top
				canvas.drawImage(bgimg,0,260,2146,770,0,260,2146,h-392); //middle
				canvas.drawImage(bgimg,0,1030,2146,132,0,h-132,2146,132); //bottom
				
				canvas.font = '50px ' + fonts;
				canvas.fillStyle = "#3C3C4B";	
				//canvas.fillStyle = "red";							
				canvas.fillText(header, 1073 - (canvas.measureText(header).width >> 1), 85);
				canvas.font = '53px ' + fonts;
				canvas.fillStyle = "#494949";	
				//canvas.fillStyle = "red";						
				canvas.fillText(title, 1073 - (canvas.measureText(title).width >> 1), 192);
				//crop maxwidth
				let y = 300;
				for (let i = 0; i < actuald.length; ++i) {
					canvas.font = '53px ' + fonts;
					if (actuald[i].n == "???") {
						y -= 52;
						canvas.fillText("？？？", 133, y + 93);
						y -= 25;
					} else if (actuald[i].n == "___") {
						y -= 170;						
					} else {
						if (anyColor(actuald[i].n)) {
							/*canvas.drawImage(base,0,0,150,150,133,y-5,148,148); //icon
							canvas.fillStyle = getColor(actuald[i].n);
							canvas.globalCompositeOperation = "lighter";
							canvas.fillRect(133,y-5,148,148); //icon
							canvas.globalCompositeOperation = "source-over";
							canvas.fillStyle = "#494949";	*/
							if (getColor(actuald[i].n) != false) {
								canvas.drawImage(generateBase(getColor(actuald[i].n)),0,0,150,150,133,y-5,148,148); //icon
								canvas.fillText(getName(actuald[i].n), 280, y + 93);
							} else {
								y -= 52;
								canvas.fillText(getName(actuald[i].n), 133, y + 93);
								y -= 25;
							}
						} else {
							canvas.drawImage(img[actuald[i].n],0,0,150,150,133,y-5,148,148); //icon
							canvas.fillText(getName(actuald[i].n), 280, y + 93);
						}
					}
					canvas.font = '46.3px ' + fonts;
					let w = canvas.measureText(actuald[i].d).width;
					let st = 0;
					let rtl = isRTL(actuald[i].d);
					while (w > maxwidth) {
						let l = nextbreakpt(actuald[i].d, st);//let l = Math.min(40, actuald[i].d.length - st);
						while (st + l < actuald[i].d.length && canvas.measureText(actuald[i].d.substr(st, l + nextbreakpt(actuald[i].d, st + l)).replace(/\s+$/g,"")).width < maxwidth) {
							l += nextbreakpt(actuald[i].d, st + l); //++l;
						};
						if (rtl) {
							canvas.fillText(actuald[i].d.substr(st, l), 136 + maxwidth - canvas.measureText(actuald[i].d.substr(st, l).replace(/\s+$/g,"")).width, y + 200);
						} else {
							canvas.fillText(actuald[i].d.substr(st, l), 136, y + 200);
						}
						y += 80;
						st += l;
						w = canvas.measureText(actuald[i].d.substr(st).replace(/\s+$/g,"")).width;
					};
					if (st < actuald[i].d.length){
						if (rtl) {
							canvas.fillText(actuald[i].d.substr(st), 136 + maxwidth - canvas.measureText(actuald[i].d.substr(st).replace(/\s+$/g,"")).width, y + 200);
						} else {
							canvas.fillText(actuald[i].d.substr(st), 136, y + 200);
						}
						y += 80;
					}
					canvas.drawImage(separator,0,0,2146,4,0,y+151.5,2146,4); //separator
					y += 195.5;
				}
				canv.setAttribute("style","");
				if (exp) id("preview").setAttribute("src",canv.toDataURL("image/png"));
				if (callback) callback();
			}
			function saveimg(){
				predraw(function(){
					var a = document.createElement("a");
					a.href = canv.toDataURL("image/png");
					a.setAttribute("download", "mainichi.png");
					a.click();
				});
			}	
			function newtab(){
				predraw(function(){
					var image = new Image();
					image.src = canv.toDataURL("image/png");
					var w = window.open("");
					w.document.write(image.outerHTML);
				});
			}	
			
			function createseparator(id){
				let div = document.createElement("div");
				div.setAttribute("class","separator");
				div.linkage = id;
				div.innerHTML = '<button class="btn_top" onclick="scrolltop()">∧</button><button class="btn_btm" onclick="scrollbtm()">∨</button><button class="btn_swap" onclick="swap(this.parentElement.linkage - 1, this.parentElement.linkage)">↕</button><button class="btn_add" onclick="addbefore(this.parentElement.linkage)">＋</button>';
				return div;
			}
			function scrolltop(){
				window.scrollTo(0,0);
			}
			function scrollbtm(){
				window.scrollTo(0,document.body.scrollHeight);
			}
			function refreshdrawer(){
				let temp = document.createElement("temp");
				for (let i = 0; i < llshort.length; ++i) {
					if (usage[i]) {
						let img = document.createElement("img");
						img.setAttribute("class","thumbs");
						img.setAttribute("onclick","setthumb(this.parentElement.parentElement.linkage," + i + ")");
						img.src = "../img/icon/" + llshort[i] + ".png";
						temp.appendChild(img);						
					};
				};
				for (let j in extensions) {
					for (let i = 0; i < extensions[j].length; ++i) {
						if (usage[j + "_" + i]) {
							let img = document.createElement("img");
							img.setAttribute("class","thumbs");
							img.setAttribute("onclick","setthumb(this.parentElement.parentElement.linkage,'" + j + "_" + i + "')");
							let tempsrc = getSrc(j + "_" + i);
							img.src = tempsrc;
							if (tempsrc == "Pixel.png"){
								img.style.border = "1px solid black";
							};
							temp.appendChild(img);	
						}						
					}
				};
				let inner = temp.innerHTML;
				let drawers = document.getElementsByClassName("drawer");
				for (let i = 0; i < drawers.length; ++i) {
					drawers[i].innerHTML = inner;
					document.getElementsByClassName("counter")[i].innerHTML = (i+1) + "/" + drawers.length;
				}
			}
			function createselector(id){
				let select = document.createElement("select");
				for (let i = 0; i < llname["jp"].length; ++i) {
					let option = document.createElement("option");
					option.setAttribute("value", i);
					option.innerHTML = getName(i);
					select.appendChild(option);				
				}
				for (let j in extensions) {
					for (let i = 0; i < extensions[j].length; ++i) {
						let option = document.createElement("option");
						option.setAttribute("value", j + "_" + i);
						option.innerHTML = getName(j + "_" + i);
						select.appendChild(option);				
					}
				};
				{
					let option = document.createElement("option");
					option.setAttribute("value", "???");
					option.innerHTML = "？？？";
					option.style.background = "lightgray";
					select.appendChild(option);				
				}
				{
					let option = document.createElement("option");
					option.setAttribute("value", "___");
					option.innerHTML = "";
					option.style.background = "lightgray";
					select.appendChild(option);				
				}
				{
					let option = document.createElement("option");
					option.setAttribute("value", "-1");
					option.innerHTML = "< ... >";
					option.style.background = "gray";
					select.appendChild(option);
				}
				return select;
			}
			function setthumb(id, become){
				let target = document.getElementsByClassName("dialog")[id];
				target.getElementsByClassName("thumb")[0].src = getSrc(become);
				target.getElementsByTagName("select")[0].value = become;
				target.getElementsByTagName("select")[0].onchange();
				
			}
			function isColor(c){
				var s = new Option().style;
				s.color = c;
				return s.color != "";
			}
			function createbox(id){
				let div = document.createElement("div");
				div.setAttribute("class","dialog");
				div.linkage = id;
				{
					let btn_close = document.createElement("button");
					btn_close.setAttribute("class","btn_close");
					btn_close.innerHTML = '×';
					btn_close.setAttribute("onclick", "removeDialog(this.parentElement.linkage)");
					div.appendChild(btn_close);
					
					let counter = document.createElement("span");
					counter.setAttribute("class","counter");
					div.appendChild(counter);
					
					let thumb = document.createElement("img");
					thumb.setAttribute("class","thumb");
					thumb.setAttribute("src","../img/icon/honoka.png");
					div.appendChild(thumb);
					
					div.appendChild(document.createTextNode(" "));
					
					let s = createselector(id);
					s.targetimg = thumb;
					s.onchange = function(){
						--usage[actuald[this.parentElement.linkage].n];
						if (this.value == -1) {
							addcustom();
							this.value = "custom_" + (extensions.custom.length - 1);
						}
						actuald[this.parentElement.linkage].n = this.value;
						this.targetimg.src = getSrc(this.value);
						++usage[actuald[this.parentElement.linkage].n];
						refreshdrawer();
					};
					div.appendChild(s);
					
					div.appendChild(document.createTextNode(" "));
					{
						let div_small = document.createElement("div");
						div_small.setAttribute("class","drawer");
						div.appendChild(div_small);
					}
					div.appendChild(document.createElement("br"));
					
					let text = document.createElement("input");
					text.setAttribute("type", "text");
					text.setAttribute("onkeypress", "return keypress(event, this)");
					text.placeholder = "台詞 (Lines)";
					text.onchange = function(){
						actuald[this.parentElement.linkage].d = this.value;
					};
					div.appendChild(text);
				}
				return div;
			}
			function keypress(ev, obj) {
				if (ev.key == "Enter") {
					obj.blur();
					addbefore(obj.parentElement.linkage + 1);
					return false;
				}
			}
			function renumbering(id){
				document.getElementsByClassName("dialog")[id].linkage = id;
				targets = document.getElementsByClassName("separator")[id].linkage = id;
			}
			function renumberlastseparator(){
				let t = document.getElementsByClassName("separator");
				t[t.length-1].linkage = t.length-1;
			}
			
			function removeDialog(rid){
				id("editor").removeChild(document.getElementsByClassName("dialog")[rid]);
				id("editor").removeChild(document.getElementsByClassName("separator")[rid]);
				--usage[actuald[rid].n];
				actuald.splice(rid, 1);
				for (let i = rid; i < actuald.length; ++i){
					renumbering(i);
				}
				renumberlastseparator();
				refreshdrawer();
			}
			
			function addbefore(rid){
				let sp = createseparator(rid);
				if (rid < actuald.length) {
					id("editor").insertBefore(sp, document.getElementsByClassName("dialog")[rid]);
				} else {
					id("editor").appendChild(sp);
				}
				let predict = undefined;
				if (rid > 0) {
					//find the one mentioned in last sentence.
					for (let i = 0; predict == undefined && i < llname["jp"].length; ++i) {
						if (actuald[rid-1].d.indexOf(getName(i)) > -1) {
							predict = i;
						}
					}
					for (let j in extensions) {
						for (let i = 0; predict == undefined && i < extensions[j].length; ++i) {
							if (actuald[rid-1].d.indexOf(getName(j + "_" + i)) > -1) {
								predict = j + "_" + i;
							}	
						}
						if (predict != undefined){
							break;
						}
					};
				} else {
					predict = 0;
				}
				if (predict == undefined) {
					//another character than the last one
					for (let i = 0; predict == undefined && i < llname["jp"].length; ++i) {
						if (usage[i] > 0 && actuald[rid-1].n != i) {
							predict = i;
						}
					}
					for (let j in extensions) {
						for (let i = 0; predict == undefined && i < extensions[j].length; ++i) {
							if (usage[j + "_" + i] > 0 && actuald[rid-1].n != (j + "_" + i)) {
								predict = j + "_" + i;
							}	
						}
						if (predict != undefined){
							break;
						}
					};
					if (predict == undefined) {
						predict = actuald[rid-1].n;
					}
				}
				actuald.splice(rid, 0, {"n": predict, "d": ""});
				++usage[predict];
				let box = createbox(rid);
				box.getElementsByTagName("select")[0].value = predict;
				box.getElementsByTagName("select")[0].onchange();
				id("editor").insertBefore(box, sp);
				for (let i = rid + 1; i < actuald.length; ++i){
					renumbering(i);
				}
				renumberlastseparator();
				refreshdrawer();
				box.getElementsByTagName("input")[0].focus();
			}
			function changeoptions() {
				//Replace all options
				let selects = document.getElementsByTagName("select");
				let newHTML = createselector().innerHTML;
				for (let i = 0; i < selects.length; ++i) {
					selects[i].innerHTML = newHTML;
					selects[i].value = actuald[i].n;
				}
			}
			function togglezh(b) {
				zh_nick = b;
				changeoptions();
			}
			function togglesimp(b) {
				zh_simp = b;
				changeoptions();
			}
			function toggleyo(b) {
				yohane = b;
				changeoptions();
			}
			function changelang(become) {
				if (lang == become) return;
				lang = become;
				id("yohanelang").innerHTML = {"jp":"ヨハネ","en":"Yohane","zh":"夜羽","th":"โยฮาเนะ","kr":"요하네"}[lang];
				if (lang=="zh") {
					document.body.setAttribute("class","zh");
					let ckbox = id("lang_zh").getElementsByTagName('input');
					for (let i = 0; i < ckbox.length; ++i) ckbox[i].checked = false;
					id("lang_zh").style.display = "inline";
				} else {
					document.body.removeAttribute("class");
					id("lang_zh").style.display = "none";
				}
				//Replace all options
				/*let selects = document.getElementsByTagName("select");
				for (let i = 0; i < selects.length; ++i) {
					let options = selects[i].getElementsByTagName("option");
					for (let j = 0; j < llname[getName(i)].length; ++j) {
						options[j].innerHTML = llname[lang][j];
					}
				}*/
				changeoptions();
			}
			
			function swap(a,b){
				if (a < 0 || b < 0 || a >= actuald.length || b >= actuald.length) return;
				if (a == b) return;
				//swap two array
				let temp = actuald[a];
				actuald[a] = actuald[b];
				actuald[b] = temp;
				//swap two elements (retain events)
				let dialogs = document.getElementsByClassName("dialog");
				let elea = dialogs[a], eleb = dialogs[b];
				let separs = document.getElementsByClassName("separator");
				let eleab4 = separs[a], elebb4 = separs[b];
				elea.linkage = b;
				eleb.linkage = a;
				eleab4.after(eleb);
				elebb4.after(elea);
			}
			function clearallext(){
				for (let j in extensions) {
					for (let i = 0; i < extensions[j].length; ++i) {
						delete loaded[j + "_" + i];		
						delete img[j + "_" + i];		
						delete usage[j + "_" + i];		
					}
				};				
			}
			
			function reset(obj){
				actuald = JSON.parse(JSON.stringify(obj));
				usage = "".padStart(llname["jp"].length," ").split("").map(a=>0);
				usage["???"] = 0;
				usage["___"] = 0;
				for (let j in extensions) {
					for (let i = 0; i < extensions[j].length; ++i) {
						usage[j + "_" + i] = 0;	//no need to load
						loaded[j + "_" + i] = extensions[j][i].i?false:true;	//no need to load
					}
				};
				id("editor").innerHTML = "";
				for (let i = 0; i < actuald.length; ++i) {
					id("editor").appendChild(createseparator(i));
					let box = createbox(i);
					box.getElementsByTagName("select")[0].value = actuald[i].n;
					++usage[actuald[i].n];
					box.getElementsByTagName("select")[0].onchange();
					box.getElementsByTagName("input")[0].value = actuald[i].d;
					box.getElementsByTagName("input")[0].onchange();
					id("editor").appendChild(box);
				}
				id("editor").appendChild(createseparator(actuald.length));
				refreshdrawer();
			}
			function JSONimport(s, extloaded){
				if (!s){
					alert("無効なデータです。\nInvalid Data.");
				} else {
					let temp;
					if (typeof s === "string") {
						try {
							temp = JSON.parse(s);
						} catch (ex) {
							alert("間違った形式です。\nWrong Format.");
							return;
						}
					} else if (typeof s === "object") {
						temp = s;
					} else {
						alert("無効なデータです。\nInvalid Data.");
						return;
					};
					if (Array.isArray(temp)) {
						for (let i = 0; i < temp.length; ++i) {
							if (temp[i]['n'] === undefined || !temp[i]['d'] === undefined){
								alert("無効なデータです。\nInvalid Data.");
								return;
							}
						}
						clearallext();
						extensions = JSON.parse(JSON.stringify(extensions_default));
						reset(temp);
					} else if (typeof temp === "object"){
						if (Array.isArray(temp["content"])){
							for (let i = 0; i < temp["content"].length; ++i) {
								if (temp["content"][i]['n'] === undefined || temp["content"][i]['d'] === undefined){
									alert("無効なデータです。\nInvalid Data.");
									return;
								}
							}
							if (temp["extensions"]) {
								extensions = temp["extensions"];
							} else {
								clearallext();
								extensions = JSON.parse(JSON.stringify(extensions_default));
							}
							reset(temp["content"]);
							if (temp["title"]) {
								id("title").value = temp["title"];
							}
							if (temp["header"]) {
								id("header").value = temp["header"];
							}
						} else {
							alert("無効なデータです。\nInvalid Data.");
						}
					} else {
						alert("無効なデータです。\nInvalid Data.");
					}
				}
			}
			function exports(){
				let wtitle = true;//confirm("ヘッダとタイトルを付きますか？\nAre the headers and titles attached?");
				let output = "";
				if (wtitle) {
					let append = "";
					if (id("header").value) {
						append += '"header":"'+id("header").value+'",';
					}
					if (id("title").value) {
						append += '"title":"'+id("title").value+'",';
					}
					if (JSON.stringify(extensions) !== '{"custom":[]}') {
						append += '"extensions":'+JSON.stringify(extensions)+',';
					}
					output = '{' + append + '"content":' + JSON.stringify(actuald) + '}';
				} else {
					output = JSON.stringify(actuald);
				};
				if (output.length > 2000) {
					copy(output);
					alert('コンテンツは長すぎてクリップボードにコピーしました。\nThe content is too long to be displayed. Copied to clipboard.');
				} else {
					prompt('コンテンツは下記の通りです。\nContents are as below.', output);
				};
			}
			reset(defaultd);
						
			function unicodeEscape(str) {
				let code, pref = {1: '', 2: '', 3: '\\u0', 4: '\\u'};
				return str.replace(/\W/g, function(c) {
					return pref[(code = c.charCodeAt(0).toString(16)).length] + ((code.length<3)?c:code);
				});
			};
			function copy(text) {
				let temp = document.createElement("textArea");
				temp.innerHTML = text;
				document.body.appendChild(temp);
				temp.select();
				document.execCommand('copy');
				document.body.removeChild(temp);
			}
			function getsharelink(twice = false) {			
				let append = "";
				if (twice) {
					if (id("header").value) {
						append += 'header='+encodeURIComponent(encodeURIComponent(id("header").value))+'&';
					}
					if (id("title").value) {
						append += 'title='+encodeURIComponent(encodeURIComponent(id("title").value))+'&';
					}
				} else {
					if (id("header").value) {
						append += 'header='+encodeURIComponent(id("header").value)+'&';
					}
					if (id("title").value) {
						append += 'title='+encodeURIComponent(id("title").value)+'&';
					}
				}
				if (JSON.stringify(extensions) !== '{"custom":[]}') {
					append += 'extensions='+encode(unicodeEscape(JSON.stringify(extensions)))+'&';
					//append += 'extensions='+btoa(unicodeEscape(JSON.stringify(extensions))).replace(/[=]/g,"").replace(/[+]/g,"-").replace(/[/]/g,"_")+'&';
				}
				let url = document.URL.substr(0,document.URL.lastIndexOf('/')) + '/index.html?' + append + "content=" + encode(unicodeEscape(JSON.stringify(actuald)));
				//let url = document.URL.substr(0,document.URL.lastIndexOf('/')) + '/index.html?' + append + "content=" + btoa(unicodeEscape(JSON.stringify(actuald))).replace(/[=]/g,"").replace(/[+]/g,"-").replace(/[/]/g,"_");
				return url;
			}
			function shareon(plat = ""){
				let url = getsharelink(plat == "twitter" || plat == "facebook" || plat == "whatsapp");
				let title = id("title").value?id("title").value:"";
				switch (plat) {
					case "":
						if (url.length > 2000) {
							copy(url);
							alert('URLは長すぎてクリップボードにコピーしました。\nThe URL is too long to be displayed. Copied to clipboard.');
						} else {
							prompt('URLは下記の通りです。\nThe URL is as follows:',url);
						}
						break;
					case "twitter":
						window.open('https://twitter.com/intent/tweet?text=' + title + '%0a%0a%23毎日劇場メーカー%20%23Re毎日劇場メーカー&url=' + url.replace(/&/g,'%26'), '_blank');
						break;
					case "facebook":
						window.open('https://www.facebook.com/sharer/sharer.php?quote=' + title + '&u=' + url.replace(/&/g,'%26'), '_blank');
						break;
					case "whatsapp":
						let isMobileDevice = (typeof window.orientation !== "undefined") || (navigator.userAgent.indexOf('IEMobile') !== -1);
						let tempwtsp = 'https://' + (isMobileDevice?'api':'web') + '.whatsapp.com/send?text=' + title + '%0a%0a%23毎日劇場メーカー%20%23Re毎日劇場メーカー%0a' + url.replace(/&/g,'%26');
						if (tempwtsp.length > 1641) { //very very long
							alert("iOSデバイスでリンクをクリックできない場合があります。すべてのユーザーは「続きを読む」をクリックして正しいリンクを表示する必要があります。\nMay not be supported on iOS devices, and Android users may need to click 'read more' to reveal the complete link.");
						} else if (tempwtsp.length > 733) { //very long
							alert("iOSデバイスでリンクをクリックできない場合があります。なお、Androidユーザーは「続きを読む」をクリックして正しいリンクを表示する必要があります。\nMay not be supported on iOS devices, and Android users may need to click 'read more' to reveal the complete link.");
						} else if (tempwtsp.length > 653) { //long
							alert("iOSデバイスでリンクをクリックできない場合があります。\nMay not be supported on iOS devices.");
						}
						window.open(tempwtsp, '_blank');
						break;
					case "line":
						window.open('https://social-plugins.line.me/lineit/share?text=' + title + '%0a%0a%23毎日劇場メーカー%20%23Re毎日劇場メーカー&url=' + encodeURIComponent(url), '_blank');
						break;
					case "telegram":
						window.open('https://telegram.me/share/url?text=' + title + '%0a%0a%23毎日劇場メーカー%20%23Re毎日劇場メーカー&url=' + encodeURIComponent(url), '_blank');
						break;
					case "email":
						let templink = 'mailto:?subject=' + title + '&body=' + encodeURIComponent(url);
						if (templink.length > 2000) { //very very long
							alert("コンテンツが長すぎるので、メールダイアログが表示されない場合があります。\nThe content is too long that the mail dialog may not appear.");
						}
						var a = document.createElement("a");
						a.setAttribute("href", templink);
						a.click();
						break;
					case "pinterest":
						let templink2 = 'https://www.pinterest.com/pin/create/button/?url=' + encodeURIComponent(url).replace(/%3F/g,'?') + '&media=https://lldetail.ml/LLAS/mainichi/twitter.png&description=' + title;
						var a = document.createElement("a");
						a.setAttribute("href", templink2);
						a.setAttribute("target", '_blank');
						a.setAttribute("rel", 'noreferrer');
						a.click();
						break;
					case "skype":
						let templink3 = 'https://web.skype.com/share?url=' + encodeURIComponent(url);
						console.log(encodeURIComponent(encodeURIComponent(templink3)));
						console.log(encodeURIComponent(encodeURIComponent(templink3)).length);
						if (encodeURIComponent(encodeURIComponent(templink3)).length > 1712) { //very very long
							alert("コンテンツが長すぎるので、404を返すていた場合があります。\nThe content is too long that 404 Error Code May be returned.");
						}
						window.open(templink3, '_blank');
						break;
				};
			}	
			queryString = window.location.search.slice(1).split('&');
			items = [];
			for (var i = 0; i < queryString.length; i++) {
				parts = queryString[i].split('=');
				items[parts[0]] = parts[1];
			}
			let passing = {};
			if (items.header) {
				//id("header").value = decodeURIComponent(items.header);
				passing["header"] = decodeURIComponent(items.header);
			}
			if (items.title) {
				//id("title").value = decodeURIComponent(items.title);
				passing["title"] = decodeURIComponent(items.title);
			}
			if (items.extensions) {
				//extensions = JSON.parse(atob((items.extensions + "====".substr(0,3 - (items.extensions.length-1) & 3)).replace(/[-]/g,"+").replace(/[_]/g,"/")));
				if (items.extensions.includes(".")){
					passing["extensions"] = JSON.parse(decode(items.extensions));
				} else {
					passing["extensions"] = JSON.parse(atob((items.extensions + "====".substr(0,3 - (items.extensions.length-1) & 3)).replace(/[-]/g,"+").replace(/[_]/g,"/")));
				};
				//passing["extensions"] = JSON.parse(atob((items.extensions + "====".substr(0,3 - (items.extensions.length-1) & 3)).replace(/[-]/g,"+").replace(/[_]/g,"/")));
			}
			if (items.content) {
				try {
					if (items.content.includes(".")){
						passing["content"] = JSON.parse(decode(items.content));
						JSONimport(passing);
					} else {
						passing["content"] = JSON.parse(atob((items.content + "====".substr(0,3 - (items.content.length-1) & 3)).replace(/[-]/g,"+").replace(/[_]/g,"/")));
						JSONimport(passing);
					};
				} catch (ex) {
					alert("間違った形式です。\nWrong Format.");
				}
			}
			
			function loadtheater() {
				var s = document.createElement("script");
				s.type = "text/javascript";
				s.src = "past.js?time=" + new Date().getTime();
				document.head.append(s);
			};
			function extensionimport() {
				var s = document.createElement("script");
				s.type = "text/javascript";
				s.src = "extensions.js?time=" + new Date().getTime();
				document.head.append(s);
			};
			
			function unlockexperimental() {
				exp = true;
				let experimental = document.getElementsByClassName("experimental");
				for (let i = 0; i < experimental.length; ++i) experimental[i].style.display = "";
			}
			
			function addcustom() {
				/*if ('open' in document.createElement("dialog")){
					let dialogs = document.createElement("dialog");
					dialogs.appendChild(document.createTextNode("カスタムキャラ (Custom Character)"));
					dialogs.appendChild(document.createElement("br"));
					dialogs.appendChild(document.createTextNode("名前 (Name)？"));
					let inputt = document.createElement("input");
					inputt.style.width = "150px";
					dialogs.appendChild(inputt);
					dialogs.appendChild(document.createElement("br"));
					dialogs.appendChild(document.createTextNode("イメージカラーは (Image Color)？"));
					dialogs.appendChild(document.createElement("br"));
					let inputt2 = document.createElement("input");
					inputt2.style.width = "150px";
					inputt2.value = "#D1D1D1"
					dialogs.appendChild(inputt2);
					let menut = document.createElement("menu");
					let btnconfirm = document.createElement("button");
					btnconfirm.innerHTML = "OK";
					btnconfirm.onclick = function(){
						if (inputt2.value=='' || !isColor(inputt2.value)){
							alert('無効なカラーです。\nInvalid Color.');
						} else {
							extensions.custom.push({"s":inputt.value, "c":inputt2.value});
							usage["custom_" + (extensions.custom.length - 1)] = 0;	//no need to load
							loaded["custom_" + (extensions.custom.length - 1)] = true;	//no need to load
							changeoptions();
							document.body.removeChild(dialogs);	
						}
					}
					let btncancel = document.createElement("button");
					btncancel.innerHTML = "Cancel";
					btncancel.onclick = function(){
						document.body.removeChild(dialogs);
					}
					menut.appendChild(btnconfirm);
					//menut.appendChild(btncancel);
					dialogs.appendChild(menut);
					document.body.appendChild(dialogs);
					dialogs.showModal();
				} else */ {
					let actual = prompt("名前？\nName?");
					actual = actual?actual:"";
					let def = "イメージカラーは？\nWhat is the Image Color?\n(例 e.g.：\n\npink / Cyan\n#80FF80 / #ccc\nRGB(100%, 0%, 0%) / rgb(122, 129, 255)\nhsl(123, 100%, 74%)\nnull)";
					let c = prompt(def, "#D1D1D1");
					while (c=='' || (!isColor(c) && c != "null")){
						alert('無効なカラーです。\nInvalid Color.');
						c = prompt(def,"#D1D1D1");
					}
					extensions.custom.push({"s":actual, "c":(c == "null"?false:c)});
					usage["custom_" + (extensions.custom.length - 1)] = 0;	//no need to load
					loaded["custom_" + (extensions.custom.length - 1)] = true;	//no need to load
					changeoptions();
				}
			}
			
		</script>
	</body>
</html>